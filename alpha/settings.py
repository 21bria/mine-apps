"""
Django settings for alpha project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os  #
from decouple import config
from cryptography.fernet import Fernet
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--70q2lzvh1eq$(@*jy=%q&2xui=atjpbcuitno-1m3l9y-_&)3'

# Baca kunci enkripsi
ENCRYPTION_KEY = config('DJANGO_ENCRYPTION_KEY')

# Gunakan kunci enkripsi dengan Fernet
cipher_suite = Fernet(ENCRYPTION_KEY.encode())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['10.50.2.145', 'localhost', '127.0.0.1']
# ALLOWED_HOSTS = ["*"]

SESSION_COOKIE_AGE = 3600  # waktu dalam detik (1 jam)
# SESSION_COOKIE_AGE = 300  # waktu dalam detik (5 menit)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sqms_apps.apps.SqmsAppsConfig',
    'geos_py.apps.GeosPyConfig',
    'corsheaders',
    'channels',
    'rest_framework',
    'api_apps.apps.ApiAppsConfig'
]

ASGI_APPLICATION = 'alpha.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],  # Pastikan Redis berjalan
        },
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF Middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'geos_py.middleware.DynamicDBMiddleware',
    # 'geos_py.middleware.RequestLogMiddleware',
    # 'geos_py.middleware.TimezoneMiddleware',
    'sqms_apps.middleware.AutoLogoutMiddleware',
    
]

AUTHENTICATION_BACKENDS = (
    'sqms_apps.authentication_backends.SQMSDBBackend',  # Backend dari aplikasi sqms
    'geos_py.authentication_backends.GeosDBBackend',  # Backend dari aplikasi gesopy
    # 'django.contrib.auth.backends.ModelBackend',
    
)
    
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8000",  # Ganti dengan origin yang sesuai
#     # ...
# ]

ROOT_URLCONF = 'alpha.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'sqms_apps', 'templates')],
        'DIRS': [os.path.join(BASE_DIR, 'geos_py', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'alpha.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
  
    # 'sqms_db': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'sqms_new',
    #     'USER': 'root',
    #     'PASSWORD': '',
    #     'HOST': 'localhost',
    #     'PORT': '3306',
    #     'ATOMIC_REQUESTS': True,  # Dihapus atau di-comment
    #     'OPTIONS': {},  
    #     'CONN_MAX_AGE': 0,  
    #     'AUTOCOMMIT': True,  
    # },
    'sqms_db': {
        'ENGINE': 'mssql',
        'HOST': '10.50.2.20',
        'PORT': '1433',
        'NAME': 'DB_SQMS',
        'USER': 'sa',
        'PASSWORD': 'konawe@2023',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
        },
    },
    'geos_db': {
        # 'ENGINE': 'django.db.backends.mysql',
        # 'NAME': 'geospy_db',
        # 'USER': 'root',
        # 'PASSWORD': '',
        # 'HOST': 'localhost',
        # 'PORT': '3306',
        # 'ATOMIC_REQUESTS': True,  # Dihapus atau di-comment
        # 'OPTIONS': {},  
        # 'CONN_MAX_AGE': 0,  
        # 'AUTOCOMMIT': True,  
        'ENGINE': 'mssql',
        'HOST': '10.50.2.20',
        'PORT': '1433',
        'NAME': 'sqms_new',
        'USER': 'sa',
        'PASSWORD': 'konawe@2023',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
        },
    },

    # 'sqlserver': {
    #     'ENGINE': 'sql_server.pyodbc',
    #     'HOST': '10.50.2.20',
    #     'PORT': '1433',
    #     'NAME': 'sqms_django',
    #     'USER': 'sa',
    #     'PASSWORD': 'konawe@2023',
    #     'OPTIONS': {
    #         'driver': 'ODBC Driver 17 for SQL Server',
    #     },
    # },
}

# Konfigurasi Multiple Database Routers
DATABASE_ROUTERS = [
    'routers.db_routers.SqmsRouter',
    'routers.db_routers.GeosRouter',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        # 'rest_framework.permissions.AllowAny',  # Semua endpoint terbuka secara default
    ]
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'celery': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# Pengaturan waktu
# TIME_ZONE = 'Asia/Makassar'  # Atur sesuai zona waktu Anda
TIME_ZONE = 'UTC'  # atau zona waktu default Anda
TIME_ZONE = 'Asia/Makassar'
print('Cek Time : ',TIME_ZONE)

USE_I18N = True
USE_TZ = False


#setup redis on local machine 
# Add this to settings 
CELERY_BROKER_URL        = 'redis://localhost:6379'
CELERY_RESULT_BACKEND    = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT    = ['application/json']
CELERY_TASK_SERIALIZER   = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE          = 'Asia/Makassar'

# Konfigurasi SMTP untuk Gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Sesuaikan dengan SMTP server yang digunakan
EMAIL_PORT = 465  # Port 465 untuk SSL
EMAIL_USE_TLS = False  # Jangan gunakan TLS
EMAIL_USE_SSL = True  # Gunakan SSL
EMAIL_HOST_USER = 'alpha.devp@gmail.com'
DEFAULT_FROM_EMAIL  = 'Alpha Develops <alpha.dev@gmail.com>'
EMAIL_HOST_PASSWORD = 'ngxmcvkglwlnkwsl'  # App password atau password asli

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

LOGIN_URL = '/sqms_apps/login/'

# Konfigurasi URL statis
STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Direktori statis untuk file-file tambahan
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "geos_py/static"),
    os.path.join(BASE_DIR, "sqms_apps/static"),
    
]

# Menentukan ukuran maksimal file upload dalam byte
FILE_UPLOAD_MAX_MEMORY_SIZE = 5 * 1024 * 1024  # 5MB

# Menentukan ukuran maksimum data POST (termasuk file) yang dapat diproses
DATA_UPLOAD_MAX_MEMORY_SIZE = 5 * 1024 * 1024  # 5MB

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD    = 'django.db.models.BigAutoField'

